syntax = "proto3";

// todo: add arenas to improve efficiency
service CompilerService {
  rpc request_compile(CompilationRequest) returns (NativeBinary) {}
}

service RepositoryService {
  rpc request_code(CodeRequest) returns (WasmFunction) {}
  rpc request_function_indices(IndicesRequest) returns (FunctionIndices) {}
}

message IndicesRequest {
  string module_name = 1;
}

message FunctionIndices {
  uint32 func_count = 1;
  uint32 main_idx = 2;
  optional uint32 start_idx = 3;
}

message WasmFunctionType {
  uint32 param_count = 1;
  // Will be of type char, see LanguageTypes in wasm.h
  // Encoded as varint size so four byte width doesn't matter
  repeated uint32 param_types = 2;
  // We currently only support 0 or 1 return values, but the specification may change to allow more.
  uint32 return_count = 3;
  // Defaults to 0 if not present
  optional uint32 return_type = 4;
}

message CompilationRequest {
  string module_name = 1;
  string architecture = 2;
  uint32 func_idx = 3;
  string target_data_layout = 4;
  uint32 program_pointer_size = 5;
}

message CodeRequest {
  string module_name = 1;
  uint32 func_idx = 2;
}

message WasmFunction {
  uint32 func_idx = 1;
  bool is_imported = 2;
  bytes func_body = 3;
  uint32 body_length = 4;
  WasmFunctionType func_type = 5;
}

message NativeBinary {
  bytes data_bytes = 1;
  uint32 data_length = 2;
}